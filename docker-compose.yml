version: "3.4"

volumes:
  sales.data:
    driver: local
  products.data:
    driver: local
  auth.data:
    driver: local
  integration.data:
    driver: local

services:
  sales.data:
    image: postgres:10-alpine
    environment:
      - POSTGRES_USER=poc
      - POSTGRES_PASSWORD=poc
    volumes:
      - sales.data:/var/lib/postgresql/data

  products.data:
    image: postgres:10-alpine
    environment:
      - POSTGRES_USER=poc
      - POSTGRES_PASSWORD=poc
    volumes:
      - products.data:/var/lib/postgresql/data

  auth.data:
    image: postgres:10-alpine
    environment:
      - POSTGRES_USER=poc
      - POSTGRES_PASSWORD=poc
    volumes:
      - auth.data:/var/lib/postgresql/data

  integration.data:
    image: postgres:10-alpine
    environment:
      - POSTGRES_USER=poc
      - POSTGRES_PASSWORD=poc
    volumes:
      - integration.data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 15672:15672

  mule:
    build:
      context: ./src/mule
      dockerfile: ./Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - supplier-ws

  redis:
    image: redis:alpine

  supplier-ws:
    build:
      context: ./src/FakeSupplierLegacyWS
      dockerfile: ./Dockerfile
    ports:
      - 5050:5050

  auth:
    build:
      context: ./src/backend
      dockerfile: ./Dockerfile
    command: ./entrypoint.sh
    environment:
      - APP_DIR=apps/auth
    ports:
      - 4000:4000
    volumes:
      - ./src/backend:/app
      - /app/deps
    depends_on:
      - auth.data

  sales:
    build:
      context: ./src/backend
      dockerfile: ./Dockerfile
    command: ./entrypoint.sh
    environment:
      - APP_DIR=apps/sales
    ports:
      - 4001:4000
    volumes:
      - ./src/backend:/app
      - /app/deps
    depends_on:
      - rabbitmq
      - sales.data
      - products.data
      - redis
      - mule

  integration:
    build:
      context: ./src/backend
      dockerfile: ./Dockerfile
    command: ./entrypoint.sh
    environment:
      - APP_DIR=apps/integration
    ports:
      - 4002:4000
    volumes:
      - ./src/backend:/app
      - /app/deps
    depends_on:
      - rabbitmq
      - integration.data
      - mule

  client:
    build:
      context: ./src/frontend/client
    command: npm start
    volumes:
      - ./src/frontend/client/:/usr/app
      - /usr/app/node_modules
    ports:
      - "3000:3000"

  maintenance:
    build:
      context: ./src/backend
      dockerfile: ./Dockerfile
    volumes:
      - ./src/backend:/app
    depends_on:
      - sales.data
      - products.data
      - integration.data
      - auth.data
